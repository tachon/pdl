(fmod PUT-0 is
 sorts NotNullList Val .
---
 op singleton : Val -> NotNullList [ctor] .
 op cons : Val NotNullList -> NotNullList [ctor] .
---
 vars ss ss1 x1 y1 : NotNullList .
 vars s v : Val .
---
 op updLast : NotNullList Val -> NotNullList .
 eq updLast(singleton(s),v) = singleton(v) .
 eq updLast(cons(s,ss),v) = cons(s,updLast(ss,v)) .

 op RupdLast : NotNullList -> Val .
 eq RupdLast(singleton(v)) = v .
 eq RupdLast(cons(s,ss1)) = RupdLast(ss1) .

 op pr : NotNullList NotNullList -> NotNullList .
 eq pr(x1,y1) = updLast(x1,RupdLast(y1)) .

endfm)



(goal PUT-0 |- eq updLast(S:NotNullList,RupdLast(S:NotNullList)) = S:NotNullList ;)
(set ind on S:NotNullList .)
(apply SI IP .)


(fmod PUT-1 is
 inc PUT-0 .
----
 vars S : NotNullList .
---
 eq updLast(S,RupdLast(S)) = S .
endfm)

(goal PUT-1 |- eq pr(S:NotNullList,S:NotNullList) = S:NotNullList ;)
(apply TC IP .)


